buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'eu.mapidev.pi.htsystem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.flywaydb:flyway-core')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}

def prodProfiles='prod'
def devProfiles='dev'
def propertyDrivenProfiles='none'
 
if (project.hasProperty('prod')) {
    propertyDrivenProfiles = prodProfiles
    apply from: rootProject.file('profile_prod.gradle');
} else if (project.hasProperty('dev')) {
    propertyDrivenProfiles = devProfiles
    apply from: rootProject.file('profile_dev.gradle');
} 
println 'Using profile: "' + propertyDrivenProfiles + '" for ' + project.getName()

bootRun {
    systemProperties = [
        'spring.profiles.active': propertyDrivenProfiles
    ]
}